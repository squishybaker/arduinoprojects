// -----------------------------------
// Example - 01: Singing A Song
// -----------------------------------
#include "application.h"

// name the pins
#define BUTTONPIN A4
#define BUZZERPIN D2

int melody1[] = {1908,2551,2551,2273,2551,0,2024,1908};  // notes in the melody
int noteDurations1[] = {4,8,8,4,4,4,4,4};               // note durations

int melody2[] = {2273,1908,1908,2551,0,1908,2024,2551};  // notes in the melody
int noteDurations2[] = {4,8,8,4,2,8,8,4};               // note durations

int buttonNew;
int buttonOld = 1;
int button = 0;
int buzzer = 0; 

// This routine runs only once upon reset
void setup()
{
    // pinMode(BUZZERPIN, OUTPUT);
    pinMode(BUTTONPIN, INPUT);                            // set user key pin as input
}

// This routine loops forever
void loop()
{
    int buttonNew = digitalRead(BUTTONPIN);
    
    if (buttonOld == 0 && buttonNew == 1){
        if (BUZZERPIN == 0){
            digitalWrite(BUZZERPIN, HIGH);
            buzzer = 1;
        } else {
            digitalWrite(BUZZERPIN, LOW);
            buzzer = 0;
        }
    }
    
    buttonOld = buttonNew;
    
    if(digitalRead(BUTTONPIN) == 0) {                     
        playMusic1();                              
     } else if (digitalRead(BUTTONPIN) == 1) {
        playMusic2();                               
        } 
}

void playMusic1(){
    for (int thisNote = 0; thisNote < 8; thisNote++) {  // ergodic all notes
        int noteDuration = 1000/noteDurations1[thisNote];  // calculate the note duration
        tone(BUZZERPIN, melody1[thisNote], noteDuration);  // let speaker sonds
        int pauseBetweenNotes = noteDuration * 1.30;      // set a minimum time between notes
        delay(pauseBetweenNotes);                         // delay for the while
        noTone(BUZZERPIN);
    }
}

void playMusic2(){
    for (int thisNote = 0; thisNote < 8; thisNote++) {  // ergodic all notes
        int noteDuration = 1000/noteDurations2[thisNote];  // calculate the note duration
        tone(BUZZERPIN, melody2[thisNote], noteDuration);  // let speaker sonds
        int pauseBetweenNotes = noteDuration * 1.30;      // set a minimum time between notes
        delay(pauseBetweenNotes);                         // delay for the while
        noTone(BUZZERPIN);
    }
}